on:
  push:
    branches:
      - main
  pull_request:

name: Test
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.17.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: set env vars
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: cache go binaries
        uses: actions/cache@v2
        id: cache-go-bin
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-${{ hashFiles('**/go.mod') }}
          restore-keys: ${{ runner.os }}-go-bin

      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - name: Lint
        if: runner.os == 'Linux'
        run: make lint
      - name: test
        if: runner.os != 'Linux'
        run: make test

  cover:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: set env vars
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: cache go binaries
        uses: actions/cache@v2
        id: cache-go-bin
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-${{ hashFiles('**/go.mod') }}
          restore-keys: ${{ runner.os }}-go-bin

      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: cover
        run: make cover

      - uses: jandelgado/gcov2lcov-action@v1.0.8
        name: convert coverage to lcov
        with:
          infile: coverage.txt
          outfile: coverage.lcov

      - name: upload to coveralls
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov

  build:
    strategy:
      matrix:
        go-version: [1.17.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: build
        run: |
          make build

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: build
        run: docker build .

  precommit:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@release
        with:
          extra_args: --show-diff-on-failure --from-ref ${{ github.event.pull_request.base.sha }} --to-ref ${{ github.event.pull_request.head.sha }}
        env:
          SKIP: lint
